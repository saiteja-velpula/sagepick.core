"""Initial migration with movies, genres, and keywords

Revision ID: b05fc6fa11df
Revises: 
Create Date: 2025-10-14 19:22:18.867906

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel             # NEW


# revision identifiers, used by Alembic.
revision: str = 'b05fc6fa11df'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('genres',
    sa.Column('tmdb_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_genres_tmdb_id'), 'genres', ['tmdb_id'], unique=True)
    op.create_table('keywords',
    sa.Column('tmdb_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_keywords_tmdb_id'), 'keywords', ['tmdb_id'], unique=True)
    op.create_table('movies',
    sa.Column('tmdb_id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('original_title', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('overview', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('poster_path', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('backdrop_path', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('original_language', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('release_date', sa.Date(), nullable=True),
    sa.Column('vote_average', sa.Float(), nullable=False),
    sa.Column('vote_count', sa.Integer(), nullable=False),
    sa.Column('popularity', sa.Float(), nullable=False),
    sa.Column('runtime', sa.Integer(), nullable=True),
    sa.Column('adult', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_movies_tmdb_id'), 'movies', ['tmdb_id'], unique=True)
    op.create_table('movie_genres',
    sa.Column('movie_id', sa.Integer(), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['genre_id'], ['genres.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ),
    sa.PrimaryKeyConstraint('movie_id', 'genre_id')
    )
    op.create_table('movie_keywords',
    sa.Column('movie_id', sa.Integer(), nullable=False),
    sa.Column('keyword_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['keyword_id'], ['keywords.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ),
    sa.PrimaryKeyConstraint('movie_id', 'keyword_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('movie_keywords')
    op.drop_table('movie_genres')
    op.drop_index(op.f('ix_movies_tmdb_id'), table_name='movies')
    op.drop_table('movies')
    op.drop_index(op.f('ix_keywords_tmdb_id'), table_name='keywords')
    op.drop_table('keywords')
    op.drop_index(op.f('ix_genres_tmdb_id'), table_name='genres')
    op.drop_table('genres')
    # ### end Alembic commands ###
